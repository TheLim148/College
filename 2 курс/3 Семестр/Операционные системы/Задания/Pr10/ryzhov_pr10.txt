**********************
Начало записи сценария Windows PowerShell
Время начала: 20241119134748
Имя пользователя: PTK\student
Запуск от имени пользователя: PTK\student
Имя конфигурации: 
Компьютер: 226-1 (Microsoft Windows NT 10.0.19042.0)
Ведущее приложение: PowerShell.exe -noexit -command Set-Location -literalPath 'C:\Users\Student.PTK\Litovchenko\pr10'
ИД процесса: 17788
PSVersion: 5.1.19041.1320
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.19041.1320
BuildVersion: 10.0.19041.1320
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Транскрибирование запущено, выходной файл ryzhov_pr10.txt
PS C:\Users\Student.PTK\Litovchenko\pr10> function greetUser {
$name = read-host "Enter your name"
param($name)
write-host "Hiii, $name"}
PS C:\Users\Student.PTK\Litovchenko\pr10> greetUser
param : Имя "param" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте прави
льность написания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:3 знак:1
+ param($name)
+ ~~~~~
    + CategoryInfo          : ObjectNotFound: (param:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
param : Имя "param" не распознано как имя командлета, функции, файла сценария или выполня
емой программы. Проверьте правильность написания имени, а также наличие и правильность пу
ти, после чего повторите попытку.
строка:3 знак:1
+ param($name)
+ ~~~~~
    + CategoryInfo          : ObjectNotFound: (param:String) [], CommandNotFoundExceptio
   n
    + FullyQualifiedErrorId : CommandNotFoundException

Hiii, Yarik
PS C:\Users\Student.PTK\Litovchenko\pr10> function greetUser {
param($name)
write-host "Hiii, $name"}
PS C:\Users\Student.PTK\Litovchenko\pr10> greetUser
Hiii,
PS C:\Users\Student.PTK\Litovchenko\pr10> function greetUser {
param($name)
$name = read-host "enter your name"
write-host "Hiii, $name"}
PS C:\Users\Student.PTK\Litovchenko\pr10> greetUser
Hiii, Juggernaut
PS C:\Users\Student.PTK\Litovchenko\pr10> function addNumber {
param([int]$a, [int]$b)
write-host("sum of numbers: " $a+$b)}
строка:3 знак:31
+ write-host("sum of numbers: " $a+$b)}
+                               ~~~~~
Непредвиденная лексема "$a+$b" в выражении или операторе.

строка:3 знак:30
+ write-host("sum of numbers: " $a+$b)}
+                              ~
Отсутствует закрывающий знак ")" в выражении.

строка:1 знак:20
+ function addNumber {
+                    ~
Отсутствует закрывающий знак "}" в блоке операторов или определении типа.

строка:3 знак:36
+ write-host("sum of numbers: " $a+$b)}
+                                    ~
Непредвиденная лексема ")" в выражении или операторе.

строка:3 знак:37
+ write-host("sum of numbers: " $a+$b)}
+                                     ~
Непредвиденная лексема "}" в выражении или операторе.
строка:3 знак:31
+ write-host("sum of numbers: " $a+$b)}
+                               ~~~~~
Непредвиденная лексема "$a+$b" в выражении или операторе.

строка:3 знак:30
+ write-host("sum of numbers: " $a+$b)}
+                              ~
Отсутствует закрывающий знак ")" в выражении.

строка:1 знак:20
+ function addNumber {
+                    ~
Отсутствует закрывающий знак "}" в блоке операторов или определении типа.

строка:3 знак:36
+ write-host("sum of numbers: " $a+$b)}
+                                    ~
Непредвиденная лексема ")" в выражении или операторе.

строка:3 знак:37
+ write-host("sum of numbers: " $a+$b)}
+                                     ~
Непредвиденная лексема "}" в выражении или операторе.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : UnexpectedToken

PS C:\Users\Student.PTK\Litovchenko\pr10> function addNumber {
param([int]$a, [int]$b)
write-host("sum of numbers: " $a+$b  )}
строка:3 знак:31
+ write-host("sum of numbers: " $a+$b  )}
+                               ~~~~~
Непредвиденная лексема "$a+$b" в выражении или операторе.

строка:3 знак:30
+ write-host("sum of numbers: " $a+$b  )}
+                              ~
Отсутствует закрывающий знак ")" в выражении.

строка:1 знак:20
+ function addNumber {
+                    ~
Отсутствует закрывающий знак "}" в блоке операторов или определении типа.

строка:3 знак:38
+ write-host("sum of numbers: " $a+$b  )}
+                                      ~
Непредвиденная лексема ")" в выражении или операторе.

строка:3 знак:39
+ write-host("sum of numbers: " $a+$b  )}
+                                       ~
Непредвиденная лексема "}" в выражении или операторе.
строка:3 знак:31
+ write-host("sum of numbers: " $a+$b  )}
+                               ~~~~~
Непредвиденная лексема "$a+$b" в выражении или операторе.

строка:3 знак:30
+ write-host("sum of numbers: " $a+$b  )}
+                              ~
Отсутствует закрывающий знак ")" в выражении.

строка:1 знак:20
+ function addNumber {
+                    ~
Отсутствует закрывающий знак "}" в блоке операторов или определении типа.

строка:3 знак:38
+ write-host("sum of numbers: " $a+$b  )}
+                                      ~
Непредвиденная лексема ")" в выражении или операторе.

строка:3 знак:39
+ write-host("sum of numbers: " $a+$b  )}
+                                       ~
Непредвиденная лексема "}" в выражении или операторе.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : UnexpectedToken

PS C:\Users\Student.PTK\Litovchenko\pr10> function addNumber {
param([int]$a, [int]$b)
$sum = $a+$b
write-host("sum of numbers: $sum")}
PS C:\Users\Student.PTK\Litovchenko\pr10> addNumber(2, 5)
>> TerminatingError(addNumber): "Не удается обработать преобразование аргументов для параметра "a". Не удается преобразовать значение "System.Object[]" типа "System.Object[]" в тип "System.Int32"."
addNumber : Не удается обработать преобразование аргументов для параметра "a". Не удается преобразовать значение "System
.Object[]" типа "System.Object[]" в тип "System.Int32".
строка:1 знак:10
+ addNumber(2, 5)
+          ~~~~~~
    + CategoryInfo          : InvalidData: (:) [addNumber], ParameterBindingArgumentTransformationException
    + FullyQualifiedErrorId : ParameterArgumentTransformationError,addNumber
addNumber : Не удается обработать преобразование аргументов для параметра "a". Не удается
 преобразовать значение "System.Object[]" типа "System.Object[]" в тип "System.Int32".
строка:1 знак:10
+ addNumber(2, 5)
+          ~~~~~~
    + CategoryInfo          : InvalidData: (:) [addNumber], ParameterBindingArgumentTran
   sformationException
    + FullyQualifiedErrorId : ParameterArgumentTransformationError,addNumber

PS C:\Users\Student.PTK\Litovchenko\pr10> function addNumber {
param($a, $b)
$sum = $a+$b
write-host("sum of numbers: $sum")}
PS C:\Users\Student.PTK\Litovchenko\pr10> addNumber(2, 5)
sum of numbers: 2 5
PS C:\Users\Student.PTK\Litovchenko\pr10> function addNumber {
param($a, $b)
$sum = [int]$a+[int]$b
write-host("sum of numbers: $sum")}
PS C:\Users\Student.PTK\Litovchenko\pr10> addNumber(2, 5)
Не удается преобразовать значение "System.Object[]" типа "System.Object[]" в тип "System.Int32".
строка:3 знак:1
+ $sum = [int]$a+[int]$b
+ ~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException
    + FullyQualifiedErrorId : ConvertToFinalInvalidCastException
Не удается преобразовать значение "System.Object[]" типа "System.Object[]" в тип "System.
Int32".
строка:3 знак:1
+ $sum = [int]$a+[int]$b
+ ~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException
    + FullyQualifiedErrorId : ConvertToFinalInvalidCastException

sum of numbers:
PS C:\Users\Student.PTK\Litovchenko\pr10> function addNumber {
param($a, $b)
return $a+$b
$sum = $a+$b
write-host($sum)}
PS C:\Users\Student.PTK\Litovchenko\pr10> addNumber(2, 5)
2
5
PS C:\Users\Student.PTK\Litovchenko\pr10> function addNumber {
param($a, $b)
write-host($a+$b)}
PS C:\Users\Student.PTK\Litovchenko\pr10> addNumber(2, 5)
2 5
PS C:\Users\Student.PTK\Litovchenko\pr10> addNumber(2,5)
2 5
PS C:\Users\Student.PTK\Litovchenko\pr10> function addNumber {
param($a, $b)
write-host([int]$a+[int]$b)}
PS C:\Users\Student.PTK\Litovchenko\pr10> addNumber(2,5)
Не удается преобразовать значение "System.Object[]" типа "System.Object[]" в тип "System.Int32".
строка:3 знак:1
+ write-host([int]$a+[int]$b)}
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException
    + FullyQualifiedErrorId : ConvertToFinalInvalidCastException
Не удается преобразовать значение "System.Object[]" типа "System.Object[]" в тип "System.
Int32".
строка:3 знак:1
+ write-host([int]$a+[int]$b)}
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException
    + FullyQualifiedErrorId : ConvertToFinalInvalidCastException

PS C:\Users\Student.PTK\Litovchenko\pr10> addNumber
0
PS C:\Users\Student.PTK\Litovchenko\pr10> function addNumber {
param($a, $b)
$a = read-host "enter first number"
$b = read-host "enter second number"
write-host($a+$b)}
PS C:\Users\Student.PTK\Litovchenko\pr10> addNumber
25
PS C:\Users\Student.PTK\Litovchenko\pr10> function addNumber {
param($a, $b)
$a = read-host "enter first number"
$b = read-host "enter second number"
write-host([int]$a+[int]$b)}
PS C:\Users\Student.PTK\Litovchenko\pr10> addNumber
7
PS C:\Users\Student.PTK\Litovchenko\pr10> function multiplyNumber {
param($a, $b)
$a = read-host "enter first number"
$b = read-host "enter second number"
write-host([int]$a*[int]$b)}
PS C:\Users\Student.PTK\Litovchenko\pr10> multiplyNumber
35
PS C:\Users\Student.PTK\Litovchenko\pr10> function divideNumber {
param($a, $b)
$a = read-host "enter first number"
$b = read-host "enter second number"
if($b -eq 0){
write-host "Divede By Zero"
break} else {
write-host([int]$a/[int]$b)}}
PS C:\Users\Student.PTK\Litovchenko\pr10> divideNumber
5
PS C:\Users\Student.PTK\Litovchenko\pr10> divideNumber
Divede By Zero
PS C:\Users\Student.PTK\Litovchenko\pr10> divideNumber
0
PS C:\Users\Student.PTK\Litovchenko\pr10> function substructNumber {
param($a, $b)
$a = read-host "enter first number"
$b = read-host "enter second number"
write-host([int]$a-[int]$b)}
PS C:\Users\Student.PTK\Litovchenko\pr10> substructNumber
-7
PS C:\Users\Student.PTK\Litovchenko\pr10> function greetWithTime{
param($time, $name)
$time = read-host "Enter time"
$name = read-host "Enter your name"
write-host("Hello $name!!!! It's $time")}
PS C:\Users\Student.PTK\Litovchenko\pr10> greetWithTime
Hello Yarik!!!! It's morning
PS C:\Users\Student.PTK\Litovchenko\pr10> function calculateArea {
param($length, $width)
$area = [int]$length*[int]$width
write-host "Area: $area"}
PS C:\Users\Student.PTK\Litovchenko\pr10> calculateArea 3 3
Area: 9
PS C:\Users\Student.PTK\Litovchenko\pr10> function calculatePerimeter {
param($length, $width)
$perimeter = [int]$length*2+[int]$width*2
write-host "Perimeter: $perimeter"}
PS C:\Users\Student.PTK\Litovchenko\pr10> calculatePerimeter 3 3
Perimeter: 12
PS C:\Users\Student.PTK\Litovchenko\pr10> function isEven {
param($a)
if ($a % 2 -eq 0){
write-host "True"} else { write-host "False"}
}
PS C:\Users\Student.PTK\Litovchenko\pr10> isEven 3
False
PS C:\Users\Student.PTK\Litovchenko\pr10> isEven 2
True
PS C:\Users\Student.PTK\Litovchenko\pr10> isEven -2
True
PS C:\Users\Student.PTK\Litovchenko\pr10> isEven wewe
Не удается преобразовать значение "wewe" в тип "System.Int32". Ошибка: "Входная строка имела неверный формат."
строка:3 знак:5
+ if ($a % 2 -eq 0){
+     ~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvalidCastFromStringToInteger
Не удается преобразовать значение "wewe" в тип "System.Int32". Ошибка: "Входная строка им
ела неверный формат."
строка:3 знак:5
+ if ($a % 2 -eq 0){
+     ~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvalidCastFromStringToInteger
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function findMax {
param($a, $b)
if($a -gt $b) {
write-host $a} else {write-host $b}}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> findMax 2 3
3
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> findMax 3 2
3
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> findMax 1 1
1
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function greetWithDefault {
param($name)
$time = "day"
write-host "Hiii, $name. It's $time"
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> greetWithDefault Kostya
Hiii, Kostya. It's day
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateVolume {
param($side)
$side = 1
write-host $side*$side*$side}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateVolume
1*1*1
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateVolume {
param($side)
[int]$side = 1
write-host [int]$side*[int]$side*[int]$side}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateVolume
[int]1*[int]1*[int]1
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateVolume {
param($side)
[int]$side = 1
[int]$result = $side*$side*$side
write-host ($result)}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateVolume
1
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateVolume 3
1
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateVolume {
param($side)
[int]$result = $side*$side*$side
write-host ($result)}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateVolume 3
27
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateVolume
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateVolume {
param($side = 1)
[int]$result = $side*$side*$side
write-host ($result)}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateVolume
1
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateVolume 3
27
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function printMessage {
param($message, $LoI = "information")
write-host ($message + " " + $information
})
строка:3 знак:42
+ write-host ($message + " " + $information
+                                          ~
Отсутствует закрывающий знак ")" в выражении.

строка:4 знак:2
+ })
+  ~
Непредвиденная лексема ")" в выражении или операторе.
строка:3 знак:42
+ write-host ($message + " " + $information
+                                          ~
Отсутствует закрывающий знак ")" в выражении.

строка:4 знак:2
+ })
+  ~
Непредвиденная лексема ")" в выражении или операторе.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : MissingEndParenthesisInExpression

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function printMessage {
param($message, $LoI = "information")
write-host ($message + " " + $information)}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> printMessage message
message
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function printMessage {
param($message, $LoI = "information")
write-host ($message + " " + $LoI)}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> printMessage message
message information
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> printMessage
 information
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function convertToCelsius {
param($degrees = 32)
$result = ([int]$degrees - 32)*(5/9)
write-host $result}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> convertToCelsius
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> convertToCelsius 32
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> convertToCelsius 100
37,7777777777778
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> convertToCelsius 198
92,2222222222222
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> convertToCelsius 98
36,6666666666667
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function convertToFahrenheit {
param($degrees = 0)
$result = ((9/5)*[int]$degrees) + 32
write-host $result}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> convertToFahrenheit
32
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> convertToFahrenheit 100
212
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> convertToFahrenheit -273
-459,4
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> convertToFahrenheit 0
32
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> convertToFahrenheit 36
96,8
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> 36,6
36
6
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> 36.6
36,6
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> convertToFahrenheit 36.6
98,6
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateAverage {
param($array)
[int]$sum = 0
foreach($elements in $array) {
$sum += [int]$elements
}
$average = $sum/$array.Length
write-host $average}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $array = 1, 2, 3, 42, 5, 6, 7, 5
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateAverage $array
8,875
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateAverage $array
8,875
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function findMaxInArray {
$max = -1000000
foreach($elements in $array) {
if($max -lt $elements) {
$max = $elements}
}
write-host $max}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> findMaxInArray $array
42
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> findMaxInArray $array
42
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function findMinInArray {
$min = 1000000
foreach($elements in $array) {
if($min -gt $elements) {
$min = $elements}
}
write-host $min}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> findMinInArray $array
1
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function countElements {
param($array)
write-host $array.Length}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countElements $array
8
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countElements 
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> findMinInArray 
1
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function findMinInArray {
param($array)
$min = 1000000
foreach($elements in $array) {
if($min -gt $elements) {
$min = $elements}
}
write-host $min}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> findMinInArray 
1000000
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function findMaxInArray {
param($array)
$max = -1000000
foreach($elements in $array) {
if($max -lt $elements) {
$max = $elements}
}
write-host $max}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function filterEvenNumbers {
param($array)
foreach($elements in $array) {
if($elements % 2 -eq 0) {
$evenarray = 0, 0
$evenarray += $elements}
}
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function filterEvenNumbers {
param($array)
foreach($elements in $array) {
if($elements % 2 -eq 0) {
$evenarray = 0, 0
$evenarray += $elements}
}
write-host $evenarray
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> filterEvenNumbers

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> filterEvenNumbers $array
0 0 6
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> filterEvenNumbers $array
0 0 6
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function filterEvenNumbers {
param($array)
foreach($elements in $array) {
if($elements % 2 -eq 0) {
$evenarray += $elements}
}
write-host $evenarray
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> filterEvenNumbers $array
50
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> filterEvenNumbers $array
50
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function filterEvenNumbers {
param($array)
foreach($elements in $array) {
if($elements % 2 -eq 0) {
$evenarray = @()
$evenarray += $elements}
}
write-host $evenarray
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> filterEvenNumbers $array
6
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> filterEvenNumbers $array
6
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function filterEvenNumbers {
param($array)
foreach($elements in $array) {
if($elements % 2 -eq 0) {
$evenarray = @()
$evenarray.Add($elements)}
}
write-host $evenarray
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> filterEvenNumbers $array
Исключение при вызове "Add" с "1" аргументами: "Коллекция имела фиксированный размер."
строка:6 знак:1
+ $evenarray.Add($elements)}
+ ~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : NotSupportedException
Исключение при вызове "Add" с "1" аргументами: "Коллекция имела фиксированный размер."
строка:6 знак:1
+ $evenarray.Add($elements)}
+ ~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : NotSupportedException

Исключение при вызове "Add" с "1" аргументами: "Коллекция имела фиксированный размер."
строка:6 знак:1
+ $evenarray.Add($elements)}
+ ~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : NotSupportedException
Исключение при вызове "Add" с "1" аргументами: "Коллекция имела фиксированный размер."
строка:6 знак:1
+ $evenarray.Add($elements)}
+ ~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : NotSupportedException

Исключение при вызове "Add" с "1" аргументами: "Коллекция имела фиксированный размер."
строка:6 знак:1
+ $evenarray.Add($elements)}
+ ~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : NotSupportedException
Исключение при вызове "Add" с "1" аргументами: "Коллекция имела фиксированный размер."
строка:6 знак:1
+ $evenarray.Add($elements)}
+ ~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : NotSupportedException


PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function filterEvenNumbers {
param($array)
foreach($elements in $array) {
if($elements % 2 -eq 0) {
$evenarray = @()
$evenarray += $elements}
}
write-host $evenarray
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> filterEvenNumbers $array
6
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function filterEvenNumbers {
param($array)
foreach($elements in $array) {
if($elements % 2 -eq 0) {
$evenarray = @( ... )
$evenarray += $elements}
}
write-host $evenarray
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> filterEvenNumbers $array
... : Имя "..." не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правильно
сть написания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:5 знак:17
+ $evenarray = @( ... )
+                 ~~~
    + CategoryInfo          : ObjectNotFound: (...:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
... : Имя "..." не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правильн
ость написания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:5 знак:17
+ $evenarray = @( ... )
+                 ~~~
    + CategoryInfo          : ObjectNotFound: (...:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

... : Имя "..." не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правильно
сть написания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:5 знак:17
+ $evenarray = @( ... )
+                 ~~~
    + CategoryInfo          : ObjectNotFound: (...:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
... : Имя "..." не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правильн
ость написания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:5 знак:17
+ $evenarray = @( ... )
+                 ~~~
    + CategoryInfo          : ObjectNotFound: (...:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

... : Имя "..." не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правильно
сть написания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:5 знак:17
+ $evenarray = @( ... )
+                 ~~~
    + CategoryInfo          : ObjectNotFound: (...:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
... : Имя "..." не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правильн
ость написания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:5 знак:17
+ $evenarray = @( ... )
+                 ~~~
    + CategoryInfo          : ObjectNotFound: (...:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

6
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function filterEvenNumbers {
param($array)
foreach($elements in $array) {
if($elements % 2 -eq 0) {
$evenarray += $elements}
}
write-host $evenarray
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $evenarray = @()
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> filterEvenNumbers $array
50
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $evenarray = @(0, )
строка:1 знак:18
+ $evenarray = @(0, )
+                  ~
Отсутствует выражение после ",".
строка:1 знак:18
+ $evenarray = @(0, )
+                  ~
Отсутствует выражение после ",".
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : MissingExpressionAfterToken

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $evenarray = @(0, 0)
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> filterEvenNumbers $array
50
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $evenarray
0
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function filterEvenNumbers {
param($array)
foreach($elements in $array) {
if($elements % 2 -eq 0) {
$evenarray += [string]$elements}
}
write-host $evenarray
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> filterEvenNumbers $array
2426
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $evenarray = 0, 0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> filterEvenNumbers $array
2426
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $evenarray
0
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateFactorial {
param($number)
for($i = 0; $i -lt $number; $i++){
$result *= $number
$number -= 1}
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 5
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateFactorial {
param($number)
for($i = 0; $i -lt $number; $i++){
$result *= $number
$number -= 1}
write-host $result
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 5

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateFactorial {
param($number)
for($i = 1; $i -le $number; $i++){
$result *= $number
$number -= 1}
write-host $result
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 5

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateFactorial {
param($number)
for($i = 1; $i -lt $number; $i++){
$result *= $number
$number -= 1}
write-host $result
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 5

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 14

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateFactorial {
param($number)
for($i = 1; $i -lt $number; $i++){
[int]$result *= $number
[int]$number -= 1}
write-host $result
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 14
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 5
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateFactorial {
param($number)
if($number -le 1){
return 1} else {
return($number*calculateFactorial $number-1)}
строка:5 знак:16
+ return($number*calculateFactorial $number-1)}
+                ~
Необходимо предоставить выражение для значения справа от оператора "*".

строка:5 знак:16
+ return($number*calculateFactorial $number-1)}
+                ~~~~~~~~~~~~~~~~~~
Непредвиденная лексема "calculateFactorial" в выражении или операторе.

строка:5 знак:16
+ return($number*calculateFactorial $number-1)}
+                ~
Отсутствует закрывающий знак ")" в выражении.

строка:4 знак:16
+ return 1} else {
+                ~
Отсутствует закрывающий знак "}" в блоке операторов или определении типа.

строка:1 знак:29
+ function calculateFactorial {
+                             ~
Отсутствует закрывающий знак "}" в блоке операторов или определении типа.

строка:5 знак:44
+ return($number*calculateFactorial $number-1)}
+                                            ~
Непредвиденная лексема ")" в выражении или операторе.

строка:5 знак:45
+ return($number*calculateFactorial $number-1)}
+                                             ~
Непредвиденная лексема "}" в выражении или операторе.
строка:5 знак:16
+ return($number*calculateFactorial $number-1)}
+                ~
Необходимо предоставить выражение для значения справа от оператора "*".

строка:5 знак:16
+ return($number*calculateFactorial $number-1)}
+                ~~~~~~~~~~~~~~~~~~
Непредвиденная лексема "calculateFactorial" в выражении или операторе.

строка:5 знак:16
+ return($number*calculateFactorial $number-1)}
+                ~
Отсутствует закрывающий знак ")" в выражении.

строка:4 знак:16
+ return 1} else {
+                ~
Отсутствует закрывающий знак "}" в блоке операторов или определении типа.

строка:1 знак:29
+ function calculateFactorial {
+                             ~
Отсутствует закрывающий знак "}" в блоке операторов или определении типа.

строка:5 знак:44
+ return($number*calculateFactorial $number-1)}
+                                            ~
Непредвиденная лексема ")" в выражении или операторе.

строка:5 знак:45
+ return($number*calculateFactorial $number-1)}
+                                             ~
Непредвиденная лексема "}" в выражении или операторе.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : ExpectedValueExpression

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateFactorial {
param($number)
for($i = 1; $i -lt $number; $i++){
[int]$result *= $number
[int]$number -= 1}
write-host $result
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateFactorial {
param($number)
for($i = 1; $i -lt $number; $i++){
[int]$result *= [int]$number
[int]$number -= 1}
write-host $result
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 5
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateFactorial {
param($number)
$result = 1
for($i = 1; $i -lt $number; $i++){
[int]$result *= $number
[int]$number -= 1}
write-host $result
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 5
20
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateFactorial {
param($number)
$result = 1
for($i = 0; $i -lt $number; $i++){
[int]$result *= $number
[int]$number -= 1}
write-host $result
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 5
60
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateFactorial {
param($number)
$result = 1
for($i = 0; $i -le $number; $i++){
[int]$result *= $number
[int]$number -= 1}
write-host $result
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 5
60
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateFactorial {
param($number)
$number1 = $number
$result = 1
for($i = 0; $i -le $number; $i++){
[int]$result *= $number1
[int]$number1 -= 1}
write-host $result
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 5
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateFactorial {
param($number)
$number1 = $number
$result = 1
for($i = 1; $i -le $number; $i++){
[int]$result *= $number1
[int]$number1 -= 1}
write-host $result
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 5
120
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 4
24
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 14
Не удается преобразовать значение "3632428800" в тип "System.Int32". Ошибка: "Значение было недопустимо малым или недопу
стимо большим для Int32."
строка:6 знак:1
+ [int]$result *= $number1
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : MetadataError: (:) [], ArgumentTransformationMetadataException
    + FullyQualifiedErrorId : RuntimeException
Не удается преобразовать значение "3632428800" в тип "System.Int32". Ошибка: "Значение было недопустимо малым или недоп
устимо большим для Int32."
строка:6 знак:1
+ [int]$result *= $number1
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : MetadataError: (:) [], ArgumentTransformationMetadataException
    + FullyQualifiedErrorId : RuntimeException

Не удается преобразовать значение "2905943040" в тип "System.Int32". Ошибка: "Значение было недопустимо малым или недопу
стимо большим для Int32."
строка:6 знак:1
+ [int]$result *= $number1
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : MetadataError: (:) [], ArgumentTransformationMetadataException
    + FullyQualifiedErrorId : RuntimeException
Не удается преобразовать значение "2905943040" в тип "System.Int32". Ошибка: "Значение было недопустимо малым или недоп
устимо большим для Int32."
строка:6 знак:1
+ [int]$result *= $number1
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : MetadataError: (:) [], ArgumentTransformationMetadataException
    + FullyQualifiedErrorId : RuntimeException

Не удается преобразовать значение "2179457280" в тип "System.Int32". Ошибка: "Значение было недопустимо малым или недопу
стимо большим для Int32."
строка:6 знак:1
+ [int]$result *= $number1
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : MetadataError: (:) [], ArgumentTransformationMetadataException
    + FullyQualifiedErrorId : RuntimeException
Не удается преобразовать значение "2179457280" в тип "System.Int32". Ошибка: "Значение было недопустимо малым или недоп
устимо большим для Int32."
строка:6 знак:1
+ [int]$result *= $number1
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : MetadataError: (:) [], ArgumentTransformationMetadataException
    + FullyQualifiedErrorId : RuntimeException

1452971520
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateFactorial 6
720
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function generateRandomNumber {
param($a, $b)
if($a -lt $b) {
write-host "error"
break} else {
wrtie-host (Get-Random -Minimum $a -Maximum $b)}
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> TerminatingError(TabExpansion2): "Не удается привязать аргумент к параметру "inputScript", так как он представляет собой пустую строку."
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> generateRandomNumber
wrtie-host : Имя "wrtie-host" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Прове
рьте правильность написания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:6 знак:1
+ wrtie-host (Get-Random -Minimum $a -Maximum $b)}
+ ~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (wrtie-host:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
wrtie-host : Имя "wrtie-host" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Пров
ерьте правильность написания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:6 знак:1
+ wrtie-host (Get-Random -Minimum $a -Maximum $b)}
+ ~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (wrtie-host:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function generateRandomNumber {
param($a, $b)
if($a -lt $b) {
write-host "error"
break} else {
write-host (Get-Random -Minimum $a -Maximum $b)}
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> generateRandomNumber
1736690499
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> generateRandomNumber 1 10
error
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> generateRandomNumber 10 1
>> TerminatingError(Get-Random): "Значение Minimum (10) не может быть больше или равно значению Maximum (1)."
Get-Random : Значение Minimum (10) не может быть больше или равно значению Maximum (1).
строка:6 знак:13
+ write-host (Get-Random -Minimum $a -Maximum $b)}
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Get-Random], ArgumentException
    + FullyQualifiedErrorId : MinGreaterThanOrEqualMax,Microsoft.PowerShell.Commands.GetRandomCommand
Get-Random : Значение Minimum (10) не может быть больше или равно значению Maximum (1).
строка:6 знак:13
+ write-host (Get-Random -Minimum $a -Maximum $b)}
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Get-Random], ArgumentException
    + FullyQualifiedErrorId : MinGreaterThanOrEqualMax,Microsoft.PowerShell.Commands.GetRandomCommand

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function generateRandomNumber {
param($a, $b)
if($a -gt $b) {
write-host "error"
break} else {
write-host (Get-Random -Minimum $a -Maximum $b)}
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> generateRandomNumber 1 10
1
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> generateRandomNumber 1 10
4
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> generateRandomNumber 1 10
4
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> generateRandomNumber 1 10
7
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> generateRandomNumber 1 10
4
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> generateRandomNumber 1 1000
545
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function reverseString{
param($string)
$string[-1..-($string.Length)] -join ''
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> reverseString "powershell"
llehsrewop
PS C:\Users\Student.PTK\Litovchenko\pr10> function countVowels {
param($string)
$count = 0
$charArray = $string.ToCharArray()
for($i = 0; $i -lt $charArray.Length; $i++){
if ($charArray.Contains("a", "e", "i", "o", "u", "y")) {
$count++}
}
}

PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels "aaa"
Не удается найти перегрузку для "Contains" и количества аргументов: "6".
строка:6 знак:5
+ if ($charArray.Contains("a", "e", "i", "o", "u", "y")) {
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest
Не удается найти перегрузку для "Contains" и количества аргументов: "6".
строка:6 знак:5
+ if ($charArray.Contains("a", "e", "i", "o", "u", "y")) {
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest

Не удается найти перегрузку для "Contains" и количества аргументов: "6".
строка:6 знак:5
+ if ($charArray.Contains("a", "e", "i", "o", "u", "y")) {
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest
Не удается найти перегрузку для "Contains" и количества аргументов: "6".
строка:6 знак:5
+ if ($charArray.Contains("a", "e", "i", "o", "u", "y")) {
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest

Не удается найти перегрузку для "Contains" и количества аргументов: "6".
строка:6 знак:5
+ if ($charArray.Contains("a", "e", "i", "o", "u", "y")) {
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest
Не удается найти перегрузку для "Contains" и количества аргументов: "6".
строка:6 знак:5
+ if ($charArray.Contains("a", "e", "i", "o", "u", "y")) {
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest

PS C:\Users\Student.PTK\Litovchenko\pr10> function countVowels {
param($string)
$count = 0
$charArray = $string.ToCharArray()
for($i = 0; $i -lt $charArray.Length; $i++){
if ($charArray.Contains("a" -or "e" -or "i" -or "o" -or "u" -or "y")) {
$count++}
}
}

PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels "aaa"
PS C:\Users\Student.PTK\Litovchenko\pr10> function countVowels {
param($string)
$count = 0
$charArray = $string.ToCharArray()
for($i = 0; $i -lt $charArray.Length; $i++){
if ($charArray.Contains("a" -or "e" -or "i" -or "o" -or "u" -or "y")) {
$count++}
}
write-host $count
}

PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels "aaa"
0
PS C:\Users\Student.PTK\Litovchenko\pr10> function countVowels {
param($string)
$count = 0
#$charArray = $string.ToCharArray()
for($i = 0; $i -lt $string.Length; $i++){
if ($string.Contains("a" -or "e" -or "i" -or "o" -or "u" -or "y")) {
$count++}
}
write-host $count
}

PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels "aaa"
0
PS C:\Users\Student.PTK\Litovchenko\pr10> function countVowels {
param($string)
$count = 0
#$charArray = $string.ToCharArray()
for($i = 0; $i -lt $string.Length; $i++){
if ($string.Contains('a' -or 'e' -or 'i' -or 'o' -or 'u' -or 'y')) {
$count++}
}
write-host $count
}

PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels "aaa"
0
PS C:\Users\Student.PTK\Litovchenko\pr10> function countVowels {
param($string)
$count = 0
$charArray = $string.ToCharArray()
for($i = 0; $i -lt $charArray.Length; $i++){
if ($charArray -Contains('a' -or 'e' -or 'i' -or 'o' -or 'u' -or 'y')) {
$count++}
}
write-host $count
}

PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels "aaa"
0
PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels "aaaeegg"
0
PS C:\Users\Student.PTK\Litovchenko\pr10> function countVowels {
param($string)
$charToCount = 'a', 'e', 'i', 'o', 'u'

$count = 0
$charArray = $string.ToCharArray()
for($i = 0; $i -lt $charArray.Length; $i++){
if ($charArray -Contains('a' -or 'e' -or 'i' -or 'o' -or 'u' -or 'y')) {
$count++}
}
write-host $count
}

PS C:\Users\Student.PTK\Litovchenko\pr10> function countVowels {
param($string)
$charToCount = 'a', 'e', 'i', 'o', 'u'
$charCount = ($string.ToCharArray() | Where-Object {$_ - eq $charToCount}).Count
write-host $charCount
}

строка:4 знак:57
+ $charCount = ($string.ToCharArray() | Where-Object {$_ - eq $charToCo ...
+                                                         ~
Необходимо предоставить выражение для значения справа от оператора "-".

строка:4 знак:58
+ $charCount = ($string.ToCharArray() | Where-Object {$_ - eq $charToCo ...
+                                                          ~~
Непредвиденная лексема "eq" в выражении или операторе.
строка:4 знак:57
+ $charCount = ($string.ToCharArray() | Where-Object {$_ - eq $charToCo ...
+                                                         ~
Необходимо предоставить выражение для значения справа от оператора "-".

строка:4 знак:58
+ $charCount = ($string.ToCharArray() | Where-Object {$_ - eq $charToCo ...
+                                                          ~~
Непредвиденная лексема "eq" в выражении или операторе.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : ExpectedValueExpression

PS C:\Users\Student.PTK\Litovchenko\pr10> function countVowels {
param($string)
$charToCount = 'a', 'e', 'i', 'o', 'u'
$charCount = ($string.ToCharArray() | Where-Object {$_ -eq $charToCount}).Count
write-host $charCount
}

PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels "aa"
0
PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels "aaii"
0
PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels 'aaii'
0
PS C:\Users\Student.PTK\Litovchenko\pr10> function countVowels {
param($string)
$charToCount = 'a'
$charCount = ($string.ToCharArray() | Where-Object {$_ -eq $charToCount}).Count
write-host $charCount
}

PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels 'aaii'
2
PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels 'aaaii'
3
PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels 'ii'
0
PS C:\Users\Student.PTK\Litovchenko\pr10> function countVowels {
param($string)
$charToCount = 'i'
$charCount = ($string.ToCharArray() | Where-Object {$_ -eq 'a'}).Count
write-host $charCount
}

PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels 'ii'
0
PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels 'aa'
2
PS C:\Users\Student.PTK\Litovchenko\pr10> function countVowels {
param($string)
$charToCount = 'i'
$charCount = ($string.ToCharArray() | Where-Object {$_ -eq 'a' -or 'i' -or 'e'}).Count
write-host $charCount
}

PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels 'aai'
3
PS C:\Users\Student.PTK\Litovchenko\pr10> function countVowels {
param($string)
$charToCount = 'i'
$charCount = ($string.ToCharArray() | Where-Object {$_ -eq 'a' -or 'i' -or 'e' -or 'o', 'u'}).Count
write-host $charCount
}

PS C:\Users\Student.PTK\Litovchenko\pr10> countVowels 'aeiou'
5
PS C:\Users\Student.PTK\Litovchenko\pr10> function isPrime {
param($number)
if ($number -le 1) {
for($i = 2; $i -le $number; $i++){
if($number % $i -eq 0) {
write-host("True")} else {write-host("False")}
}
}
}
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime 1
PS C:\Users\Student.PTK\Litovchenko\pr10> function isPrime {
param($number)
if ($number -le 1) {
for($i = 2; $i -le $number; $i++){
if($number % $i -eq 0) {
write-host("True")} else {write-host("False")}
}
}
write-host("$number less than 1")
}
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime 1
1 less than 1
PS C:\Users\Student.PTK\Litovchenko\pr10> function isPrime {
param($number)
if ($number -le 1) {
for($i = 2; $i -le $number; $i++){
if($number % $i -eq 0) {
write-host("True")} else {write-host("False")}
}
}
write-host("$number less or equal 1")
}
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime 1
1 less or equal 1
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime -1
-1 less or equal 1
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime 2
2 less or equal 1
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime 3
3 less or equal 1
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime 4000
4000 less or equal 1
PS C:\Users\Student.PTK\Litovchenko\pr10> function isPrime {
param($number)
if ($number -le 1) {
write-host("$number less or equal 1")
} else{
for($i = 2; $i -le $number; $i++){
if($number % $i -eq 0) {
write-host("True")} else {write-host("False")}
}
}
}
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime 1
1 less or equal 1
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime -1
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime 2
True
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime 3
False
True
PS C:\Users\Student.PTK\Litovchenko\pr10> 5
5
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime 5
False
False
False
True
PS C:\Users\Student.PTK\Litovchenko\pr10> function isPrime {
param($number)
if ($number -lt 1) {
write-host("$number less or equal 1")
} else{
for($i = 2; $i -lt $number; $i++){
if($number % $i -eq 0) {
write-host("True") else {write-host("False")}
}
}
}
}
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime 5
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime -1
PS C:\Users\Student.PTK\Litovchenko\pr10> isPrime 1
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function isprime {
param($n)
if ($n -le 1) {return 0};
for($i = 2; $i -lt $n; $i++) {
if ($n % $i -eq 0) {
return 0;
} 
return 1;
}
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isprime 4
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isprime 2
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isprime 1
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isprime 5
1
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function isprime {
param($n)
if ($n -le 1) {return "false"};
for($i = 2; $i -lt $n; $i++) {
if ($n % $i -eq 0) {
return "false";
} 
return "true";
}
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isprime 5
true
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isprime 8
false
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function countToN {
param($n)
$sum = 0
for($i = 0; $i -le $n; $i++) {
$sum += $i;
}
write-host("sum from 1 to n equals $sum")
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countToN 6
sum from 1 to n equals 21
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countToN 0
sum from 1 to n equals 0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countToN 1
sum from 1 to n equals 1
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function countToN {
param($n)
$sum = 0
for($i = 0; $i -le $n; $i++) {
$sum += $i;
}
write-host("sum from 1 to $n equals $sum")
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countToN 6
sum from 1 to 6 equals 21
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countToN -1
sum from 1 to -1 equals 0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $array = [4, 5, 6, 3, 7, 42, 99]
строка:1 знак:11
+ $array = [4, 5, 6, 3, 7, 42, 99]
+           ~
Отсутствует имя типа после знака "[".

строка:1 знак:12
+ $array = [4, 5, 6, 3, 7, 42, 99]
+            ~
Отсутствует аргумент в списке параметров.
строка:1 знак:11
+ $array = [4, 5, 6, 3, 7, 42, 99]
+           ~
Отсутствует имя типа после знака "[".

строка:1 знак:12
+ $array = [4, 5, 6, 3, 7, 42, 99]
+            ~
Отсутствует аргумент в списке параметров.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : MissingTypename

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $array = 4, 5, 6, 3, 7, 42, 99
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function sortArray {
param($array)
for($i = 1; $i -lt $array.length; $i++){
for($j = 0; $j -lt $array.length; $j++){
if($array[$j] -gt $array[$j+1]) {
$temp = $array[$j]
$array[$j] = $array[$j+1]
$array[$j+1] = $temp
}
}
}
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function sortArray {
param($array)
for($i = 1; $i -lt $array.length; $i++){
for($j = 0; $j -lt $array.length; $j++){
if($array[$j] -gt $array[$j+1]) {
$temp = $array[$j]
$array[$j] = $array[$j+1]
$array[$j+1] = $temp
}
}
}
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function sortArray {
param($array)
for($i = 1; $i -lt $array.length; $i++){
for($j = 0; $j -lt $array.length; $j++){
if($array[$j] -gt $array[$j+1]) {
$temp = $array[$j]
$array[$j] = $array[$j+1]
$array[$j+1] = $temp
}
}
}
write-host($array)
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> sortArray $array
Индекс находился вне границ массива.
строка:8 знак:1
+ $array[$j+1] = $temp
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], IndexOutOfRangeException
    + FullyQualifiedErrorId : System.IndexOutOfRangeException
Индекс находился вне границ массива.
строка:8 знак:1
+ $array[$j+1] = $temp
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], IndexOutOfRangeException
    + FullyQualifiedErrorId : System.IndexOutOfRangeException

Индекс находился вне границ массива.
строка:8 знак:1
+ $array[$j+1] = $temp
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], IndexOutOfRangeException
    + FullyQualifiedErrorId : System.IndexOutOfRangeException
Индекс находился вне границ массива.
строка:8 знак:1
+ $array[$j+1] = $temp
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], IndexOutOfRangeException
    + FullyQualifiedErrorId : System.IndexOutOfRangeException

Индекс находился вне границ массива.
строка:8 знак:1
+ $array[$j+1] = $temp
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], IndexOutOfRangeException
    + FullyQualifiedErrorId : System.IndexOutOfRangeException
Индекс находился вне границ массива.
строка:8 знак:1
+ $array[$j+1] = $temp
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], IndexOutOfRangeException
    + FullyQualifiedErrorId : System.IndexOutOfRangeException

Индекс находился вне границ массива.
строка:8 знак:1
+ $array[$j+1] = $temp
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], IndexOutOfRangeException
    + FullyQualifiedErrorId : System.IndexOutOfRangeException
Индекс находился вне границ массива.
строка:8 знак:1
+ $array[$j+1] = $temp
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], IndexOutOfRangeException
    + FullyQualifiedErrorId : System.IndexOutOfRangeException

Индекс находился вне границ массива.
строка:8 знак:1
+ $array[$j+1] = $temp
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], IndexOutOfRangeException
    + FullyQualifiedErrorId : System.IndexOutOfRangeException
Индекс находился вне границ массива.
строка:8 знак:1
+ $array[$j+1] = $temp
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], IndexOutOfRangeException
    + FullyQualifiedErrorId : System.IndexOutOfRangeException

Индекс находился вне границ массива.
строка:8 знак:1
+ $array[$j+1] = $temp
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], IndexOutOfRangeException
    + FullyQualifiedErrorId : System.IndexOutOfRangeException
Индекс находился вне границ массива.
строка:8 знак:1
+ $array[$j+1] = $temp
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], IndexOutOfRangeException
    + FullyQualifiedErrorId : System.IndexOutOfRangeException

3
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function sortArray {
param($array)
for($i = 1; $i -lt $array.Length; $i++){
for($j = 0; $j -lt $array.Length; $j++){
if($array[$j] -gt $array[$j+1]) {
$temp = $array[$j]
$array[$j] = $array[$j+1]
$array[$j+1] = $temp
}
}
}
write-host($array)
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> sortArray $array
Индекс находился вне границ массива.
строка:8 знак:1
+ $array[$j+1] = $temp
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], IndexOutOfRangeException
    + FullyQualifiedErrorId : System.IndexOutOfRangeException
Индекс находился вне границ массива.
строка:8 знак:1
+ $array[$j+1] = $temp
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], IndexOutOfRangeException
    + FullyQualifiedErrorId : System.IndexOutOfRangeException


PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $array | sort-object
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $array 
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $array = 2, 3, 5, 42, 99, 15
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $sorted_array = $array | Sort-Object
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $sorted_array
2
3
5
15
42
99
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $sorted_arrray[-2]
Не удается индексировать в массив NULL.
строка:1 знак:1
+ $sorted_arrray[-2]
+ ~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray
Не удается индексировать в массив NULL.
строка:1 знак:1
+ $sorted_arrray[-2]
+ ~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $sorted_arrray[$sorted_array.length-1]
Не удается индексировать в массив NULL.
строка:1 знак:1
+ $sorted_arrray[$sorted_array.length-1]
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray
Не удается индексировать в массив NULL.
строка:1 знак:1
+ $sorted_arrray[$sorted_array.length-1]
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $sorted_arrray[1]
Не удается индексировать в массив NULL.
строка:1 знак:1
+ $sorted_arrray[1]
+ ~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray
Не удается индексировать в массив NULL.
строка:1 знак:1
+ $sorted_arrray[1]
+ ~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $array
2
3
5
42
99
15
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $array[-1]
15
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $array[-2]
99
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> [array]$sorted_array[-2]
42
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function sortArray {
param($array)
$sorted_array = $array | sort-object
write-host($sorted_array)
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> sortArray $array
2 3 5 15 42 99
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function sortArray {
param($array)
$sorted_array = $array | sort-object
write-host("unsorted array "$array)
write-host("sorted array "$sorted_array)
}
строка:4 знак:29
+ write-host("unsorted array "$array)
+                             ~~~~~~
Непредвиденная лексема "$array" в выражении или операторе.

строка:4 знак:29
+ write-host("unsorted array "$array)
+                             ~
Отсутствует закрывающий знак ")" в выражении.

строка:1 знак:20
+ function sortArray {
+                    ~
Отсутствует закрывающий знак "}" в блоке операторов или определении типа.

строка:4 знак:35
+ write-host("unsorted array "$array)
+                                   ~
Непредвиденная лексема ")" в выражении или операторе.

строка:5 знак:27
+ write-host("sorted array "$sorted_array)
+                           ~~~~~~~~~~~~~
Непредвиденная лексема "$sorted_array" в выражении или операторе.

строка:5 знак:27
+ write-host("sorted array "$sorted_array)
+                           ~
Отсутствует закрывающий знак ")" в выражении.

строка:5 знак:40
+ write-host("sorted array "$sorted_array)
+                                        ~
Непредвиденная лексема ")" в выражении или операторе.

строка:6 знак:1
+ }
+ ~
Непредвиденная лексема "}" в выражении или операторе.
строка:4 знак:29
+ write-host("unsorted array "$array)
+                             ~~~~~~
Непредвиденная лексема "$array" в выражении или операторе.

строка:4 знак:29
+ write-host("unsorted array "$array)
+                             ~
Отсутствует закрывающий знак ")" в выражении.

строка:1 знак:20
+ function sortArray {
+                    ~
Отсутствует закрывающий знак "}" в блоке операторов или определении типа.

строка:4 знак:35
+ write-host("unsorted array "$array)
+                                   ~
Непредвиденная лексема ")" в выражении или операторе.

строка:5 знак:27
+ write-host("sorted array "$sorted_array)
+                           ~~~~~~~~~~~~~
Непредвиденная лексема "$sorted_array" в выражении или операторе.

строка:5 знак:27
+ write-host("sorted array "$sorted_array)
+                           ~
Отсутствует закрывающий знак ")" в выражении.

строка:5 знак:40
+ write-host("sorted array "$sorted_array)
+                                        ~
Непредвиденная лексема ")" в выражении или операторе.

строка:6 знак:1
+ }
+ ~
Непредвиденная лексема "}" в выражении или операторе.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : UnexpectedToken

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function sortArray {
param($array)
$sorted_array = $array | sort-object
write-host("unsorted array $array")
write-host("sorted array $sorted_array")
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> sortArray $array
unsorted array 2 3 5 42 99 15
sorted array 2 3 5 15 42 99
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function findSecondMax {
param($array)
$sorted_array = $array | sort-object
$second_max = [array]$sorted_array[-2]
write-host("second max number in array is $second_max"
}
строка:5 знак:55
+ write-host("second max number in array is $second_max"
+                                                       ~
Отсутствует закрывающий знак ")" в выражении.
строка:5 знак:55
+ write-host("second max number in array is $second_max"
+                                                       ~
Отсутствует закрывающий знак ")" в выражении.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : MissingEndParenthesisInExpression

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function findSecondMax {
param($array)
$sorted_array = $array | sort-object
$second_max = [array]$sorted_array[-2]
write-host("second max number in array is $second_max")
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> findSecondMax $array
second max number in array is 42
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function findSecondMax {
param($array)
$sorted_array = $array | sort-object
$second_max = [array]$sorted_array[-2]
write-host("array $array")
write-host("second max number in array is $second_max")
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> findSecondMax $array
array 2 3 5 42 99 15
second max number in array is 42
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $array1 = 1, 2, 3
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $array2 = 4, 5, 6
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function mergeArrays{
param($array1, $array2)
$combine_array = $array1 + $array2
write-host("combine array is $combine_array")
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> mergeArrays $array1 $array2
combine array is 1 2 3 4 5 6
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateDistance {
param($x1, $y1, $x2, $y2)
$distance = [math]::Sqrt(([math]::Pow($x2 - $x1), 2) - ([math]::Pow($y2 - $y1), 2))
write-host("distance from x to y equals $distance")
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateDistance 1 1 2 2
Не удается найти перегрузку для "Pow" и количества аргументов: "1".
строка:3 знак:1
+ $distance = [math]::Sqrt(([math]::Pow($x2 - $x1), 2) - ([math]::Pow($ ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest
Не удается найти перегрузку для "Pow" и количества аргументов: "1".
строка:3 знак:1
+ $distance = [math]::Sqrt(([math]::Pow($x2 - $x1), 2) - ([math]::Pow($ ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest

distance from x to y equals
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateDistance {
param($x1, $y1, $x2, $y2)
$distance = [math]::Sqrt(([math]::Pow(($x2 - $x1), 2) - ([math]::Pow(($y2 - $y1), 2))
write-host("distance from x to y equals $distance")
}
строка:3 знак:86
+ ... h]::Sqrt(([math]::Pow(($x2 - $x1), 2) - ([math]::Pow(($y2 - $y1), 2))
+                                                                          ~
Отсутствует закрывающий знак ")" в выражении.

строка:3 знак:86
+ ... h]::Sqrt(([math]::Pow(($x2 - $x1), 2) - ([math]::Pow(($y2 - $y1), 2))
+                                                                          ~
Отсутствует ")" в вызове метода.

строка:4 знак:1
+ write-host("distance from x to y equals $distance")
+ ~~~~~~~~~~
Непредвиденная лексема "write-host" в выражении или операторе.
строка:3 знак:86
+ ... h]::Sqrt(([math]::Pow(($x2 - $x1), 2) - ([math]::Pow(($y2 - $y1), 2))
+                                                                          ~
Отсутствует закрывающий знак ")" в выражении.

строка:3 знак:86
+ ... h]::Sqrt(([math]::Pow(($x2 - $x1), 2) - ([math]::Pow(($y2 - $y1), 2))
+                                                                          ~
Отсутствует ")" в вызове метода.

строка:4 знак:1
+ write-host("distance from x to y equals $distance")
+ ~~~~~~~~~~
Непредвиденная лексема "write-host" в выражении или операторе.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : MissingEndParenthesisInExpression

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function calculateDistance {
param($x1, $y1, $x2, $y2)
$square1 = [math]::Pow(($x2 - $x1), 2)
$square2 = [math]::Pow(($y2 - $y1), 2)
$distance = [math]::Sqrt($square1 + $square2)
write-host("distance from x to y equals $distance")
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateDistance 1 1 2 2
distance from x to y equals 1.4142135623731
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> calculateDistance 1 2 1 2
distance from x to y equals 0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function isLeapYear {
param($year)
if($year % 4 -eq 0) {
return "true"}
return "false"
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isLeapYear 2020
true
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isLeapYear 2021
false
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function generateUUID {
write-host(new-guid)
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> generateUUID
4f1ba69d-5241-44f5-bb74-614f77dd6464
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> generateUUID
2647649b-65f7-4883-acbe-8b13e4c084a6
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function counConsonants {
param($string)
$charToCount = 'i'
$charCount = ($string.ToCharArray() | Where-Object {$_ -eq 'b' -or 'c' -or 'd' -or 'f' -or 'g' -or 'h' -or 'j' -or 'k' -or 'l' -or 'm' -or 'n' -or 'p' -or 'q' -or 'r' -or 's' -or 't' -or 'v' -or 'w' -or 'x' -or 'y' -or 'z'}).Count
write-host $charCount
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function countConsonants {
param($string)
$charToCount = 'i'
$charCount = ($string.ToCharArray() | Where-Object {$_ -eq 'b' -or 'c' -or 'd' -or 'f' -or 'g' -or 'h' -or 'j' -or 'k' -or 'l' -or 'm' -or 'n' -or 'p' -or 'q' -or 'r' -or 's' -or 't' -or 'v' -or 'w' -or 'x' -or 'y' -or 'z'}).Count
write-host $charCount
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> TerminatingError(TabExpansion2): "Не удается привязать аргумент к параметру "inputScript", так как он представляет собой пустую строку."
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countConsonants hello world
5
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countConsonants helloworld
10
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countConsonants hello
5
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function countConsonants {
param($string)
$charCount = ($string.ToCharArray() | Where-Object {$_ -eq 'b' -or 'c' -or 'd' -or 'f' -or 'g' -or 'h' -or 'j' -or 'k' -or 'l' -or 'm' -or 'n' -or 'p' -or 'q' -or 'r' -or 's' -or 't' -or 'v' -or 'w' -or 'x' -or 'y' -or 'z'}).Count
write-host $charCount
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countConsonants hello
5
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> aeui
aeui : Имя "aeui" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правиль
ность написания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:1 знак:1
+ aeui
+ ~~~~
    + CategoryInfo          : ObjectNotFound: (aeui:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
aeui : Имя "aeui" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правильность написания имени, а
 также наличие и правильность пути, после чего повторите попытку.
строка:1 знак:1
+ aeui
+ ~~~~
    + CategoryInfo          : ObjectNotFound: (aeui:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countConsonants aeui
4
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function countConsonants {
param($string)
$charCount = ($string.ToCharArray() | Where-Object {$_ -eq 'b' -or 'c' -or 'd' -or 'f' -or 'g' -or 'h' -or 'j' -or 'k' -or 'l' -or 'm' -or 'n' -or 'p' -or 'q' -or 'r' -or 's' -or 't' -or 'v' -or 'w' -or 'x' -or 'y', 'z'}).Count
write-host $charCount
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countConsonants a
1
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function countConsonants {
param($string)
$charCount = ($string.ToCharArray() | Where-Object {$_ -eq 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}).Count
write-host $charCount
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countConsonants a
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countConsonants hello
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function countConsonants {
param($string)
write-host([regex]::Matches($string, 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')).count
#$charCount = ($string.ToCharArray() | Where-Object {$_ -eq 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}).Count
#write-host $charCount
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countConsonants hello
Не удается найти перегрузку для "Matches" и количества аргументов: "22".
строка:3 знак:1
+ write-host([regex]::Matches($string, 'b', 'c', 'd', 'f', 'g', 'h', 'j ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest
Не удается найти перегрузку для "Matches" и количества аргументов: "22".
строка:3 знак:1
+ write-host([regex]::Matches($string, 'b', 'c', 'd', 'f', 'g', 'h', 'j ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function countConsonants {
param($string)
write-host(([regex]::Matches($string, 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')).count)
#$charCount = ($string.ToCharArray() | Where-Object {$_ -eq 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}).Count
#write-host $charCount
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countConsonants hello
Не удается найти перегрузку для "Matches" и количества аргументов: "22".
строка:3 знак:1
+ write-host(([regex]::Matches($string, 'b', 'c', 'd', 'f', 'g', 'h', ' ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest
Не удается найти перегрузку для "Matches" и количества аргументов: "22".
строка:3 знак:1
+ write-host(([regex]::Matches($string, 'b', 'c', 'd', 'f', 'g', 'h', ' ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest

PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function countConsonants {
param($string)
write-host(([regex]::Matches($string, 'b')).count)
#$charCount = ($string.ToCharArray() | Where-Object {$_ -eq 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}).Count
#write-host $charCount
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> countConsonants hello
0
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> $array = 1, 2, 3, 4, 4, 4, 5, 5, 6, 7
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function findFirstDuplicate {
param($array)
$array | Group | Where{$_.Count -gt 1} | Select-Object Name
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> findFirstDuplicate $array

Name
----
4
5


PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function isAnagramm {
param($array)
$reversed_array = $array[-1..-($array.length)]
if($array -eq $reversed_array) {
return "true"}
return "false"
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isAnagramm hello
false
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isAnagramm lol
false
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function isAnagramm {
param($array)
$reversed_array = $array[-1..-($array.length)]
if($array -eq $reversed_array) {
return "true"} else {
return "false"}
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isAnagramm lol
false
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function isAnagramm {
param($array)
$reversed_array = $array[-1..-($array.length)]
if($array -eq $reversed_array) {
return "true"} else {
return "false"}
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function isAnagramm {
param($array)
$reversed_array = $array[-1..-($array.length)]
if($array -eq $reversed_array) {
return "true"} else {
return "false"}

}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function isAnagramm {
param($array)
$reversed_array = $array[-1..-($array.length)]
if($array -eq $reversed_array) {
return "true"} else {
return "false"}
write-host ($array)
write-host ($reversed_array)
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isAnagramm lol
false
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function isAnagramm {
param($array)
$reversed_array = $array[-1..-($array.length)]
if($array -eq $reversed_array) {
return "true"} else {
return "false"}
write-host ($array)
write-host ($reversed_array)
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isAnagramm lol
false
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function isAnagramm {
param($array)
$array.tochararray()
$reversed_array = $array[-1..-($array.length)]
if($array -eq $reversed_array) {
return "true"} else {
return "false"}
write-host ($array)
write-host ($reversed_array)
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isAnagramm lol
l
o
l
false
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function isAnagramm {
param($array)
$array.tochararray()
write-host ($array)
write-host ($reversed_array)
$reversed_array = $array[-1..-($array.length)]
if($array -eq $reversed_array) {
return "true"} else {
return "false"}

}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isAnagramm lol
l
o
l
lol

false
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function isAnagramm {
param($array)
$array.tochararray()

$reversed_array = $array[-1..-($array.length)]
$reversed_array.tochararray()
if($array -eq $reversed_array) {
return "true"} else {
return "false"}
write-host ($array)
write-host ($reversed_array)
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isAnagramm lol
l
o
l
Сбой вызова метода из-за отсутствия в [System.Char] метода с именем "ToCharArray".
строка:6 знак:1
+ $reversed_array.tochararray()
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : MethodNotFound
Сбой вызова метода из-за отсутствия в [System.Char] метода с именем "ToCharArray".
строка:6 знак:1
+ $reversed_array.tochararray()
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : MethodNotFound

false
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function isAnagramm {
param($array)
$array.tochararray()
$reversedarray = $array[-1..-($array.length)]
if($array -eq $reversedarray) {
return "true"} else {
return "false"}
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isAnagramm lol
l
o
l
false
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function isAnagramm {
param($array)
$array.tochararray() -join''
$reversed_array = $array[-1..-($array.length)] -join''
if($array -eq $reversed_array) {
return "true"} else {
return "false"}
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> isAnagramm шалаш
шалаш
true
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> function findLongestWord {
param($string)
return ($string | Measure-Object -Maximum -Property Length).Maximum
}
PS C:\Users\Lima148\Desktop\College\Операционные системы\Задания\Pr10> findLongestWord "hello", "hiiiiiiiiiiiiii"
15

