**********************
Начало записи сценария Windows PowerShell
Время начала: 20241112084956
Имя пользователя: PTK\student
Запуск от имени пользователя: PTK\student
Имя конфигурации: 
Компьютер: 226-1 (Microsoft Windows NT 10.0.19042.0)
Ведущее приложение: PowerShell.exe -noexit -command Set-Location -literalPath 'C:\Users\Student.PTK\Litovchenko'
ИД процесса: 19732
PSVersion: 5.1.19041.1320
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.19041.1320
BuildVersion: 10.0.19041.1320
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Транскрибирование запущено, выходной файл ryzhov_pr9.txt
PS C:\Users\Student.PTK\Litovchenko> for($i = 0;$i -lt 10;$i++) {
write-host "i equals $i"}
i equals 0
i equals 1
i equals 2
i equals 3
i equals 4
i equals 5
i equals 6
i equals 7
i equals 8
i equals 9
PS C:\Users\Student.PTK\Litovchenko> for($i = 0;$i -le 10;$i++) {
write-host "i equals $i"}
i equals 0
i equals 1
i equals 2
i equals 3
i equals 4
i equals 5
i equals 6
i equals 7
i equals 8
i equals 9
i equals 10
PS C:\Users\Student.PTK\Litovchenko> $sum = 0
PS C:\Users\Student.PTK\Litovchenko> for($i = 0; $i -le 100; $i++) {
$sum += $i}
PS C:\Users\Student.PTK\Litovchenko> write-host($sum)
5050
PS C:\Users\Student.PTK\Litovchenko> for($i = 0; $i -le 10; $i++) {
write-host "square of number i equals $i*$i"}
square of number i equals 0*0
square of number i equals 1*1
square of number i equals 2*2
square of number i equals 3*3
square of number i equals 4*4
square of number i equals 5*5
square of number i equals 6*6
square of number i equals 7*7
square of number i equals 8*8
square of number i equals 9*9
square of number i equals 10*10
PS C:\Users\Student.PTK\Litovchenko> for($i = 0; $i -le 10; $i++) {
write-host "square of number i equals " + ($i*$i)}
square of number i equals  + 0
square of number i equals  + 1
square of number i equals  + 4
square of number i equals  + 9
square of number i equals  + 16
square of number i equals  + 25
square of number i equals  + 36
square of number i equals  + 49
square of number i equals  + 64
square of number i equals  + 81
square of number i equals  + 100
PS C:\Users\Student.PTK\Litovchenko> for($i = 0; $i -le 10; $i++) {
write-host "square of number $i equals: " ($i*$i)}
square of number 0 equals:  0
square of number 1 equals:  1
square of number 2 equals:  4
square of number 3 equals:  9
square of number 4 equals:  16
square of number 5 equals:  25
square of number 6 equals:  36
square of number 7 equals:  49
square of number 8 equals:  64
square of number 9 equals:  81
square of number 10 equals:  100
PS C:\Users\Student.PTK\Litovchenko> for($i = 0; $i -le 20; $i++){
if ($i % 2 -eq 0) {
write-host $i "is even"} else {
write-host $i "is odd"}
}
0 is even
1 is odd
2 is even
3 is odd
4 is even
5 is odd
6 is even
7 is odd
8 is even
9 is odd
10 is even
11 is odd
12 is even
13 is odd
14 is even
15 is odd
16 is even
17 is odd
18 is even
19 is odd
20 is even
PS C:\Users\Student.PTK\Litovchenko> for($i = 10; $i -ge 1; $i--) {
write-host $i
}
10
9
8
7
6
5
4
3
2
1
PS C:\Users\Student.PTK\Litovchenko> $fruits = "apple", "banana", "orange", "peach"
PS C:\Users\Student.PTK\Litovchenko> foreach($elements in $fruits) {
write-host $elements
}
apple
banana
orange
peach
PS C:\Users\Student.PTK\Litovchenko> foreach($elements in $fruits) {
write-host $elements.length}
5
6
6
5
PS C:\Users\Student.PTK\Litovchenko> $numbers = 1, 2, 4, 5, 6, 42, 7, 8
PS C:\Users\Student.PTK\Litovchenko> foreach($element in $numbers) {
if ($element -gt 5) {
write-host "number: " $element " greater than 5"}
}
number:  6  greater than 5
number:  42  greater than 5
number:  7  greater than 5
number:  8  greater than 5
PS C:\Users\Student.PTK\Litovchenko> $sum = 0
PS C:\Users\Student.PTK\Litovchenko> foreach($element in $numbers) {
}
PS C:\Users\Student.PTK\Litovchenko> foreach($element in $numbers) {
}
PS C:\Users\Student.PTK\Litovchenko> foreach($element in $numbers) {
$sum += $element}
PS C:\Users\Student.PTK\Litovchenko> write-host $sum
75
PS C:\Users\Student.PTK\Litovchenko> $colors = "red", "blue", "green", "cyan"
PS C:\Users\Student.PTK\Litovchenko> foreach($color in $colors) {
if($color = "c***") {
write-host $color}
}
c***
c***
c***
c***
PS C:\Users\Student.PTK\Litovchenko> foreach($color in $colors) {
if($color = c***) {
write-host $color}
}
c*** : Имя "c***" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правиль
ность написания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:2 знак:13
+ if($color = c***) {
+             ~~~~
    + CategoryInfo          : ObjectNotFound: (c***:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
c*** : Имя "c***" не распознано как имя командлета, функции, файла сценария или выполняе
мой программы. Проверьте правильность написания имени, а также наличие и правильность пу
ти, после чего повторите попытку.
строка:2 знак:13
+ if($color = c***) {
+             ~~~~
    + CategoryInfo          : ObjectNotFound: (c***:String) [], CommandNotFoundExceptio
   n
    + FullyQualifiedErrorId : CommandNotFoundException

c*** : Имя "c***" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правиль
ность написания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:2 знак:13
+ if($color = c***) {
+             ~~~~
    + CategoryInfo          : ObjectNotFound: (c***:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
c*** : Имя "c***" не распознано как имя командлета, функции, файла сценария или выполняе
мой программы. Проверьте правильность написания имени, а также наличие и правильность пу
ти, после чего повторите попытку.
строка:2 знак:13
+ if($color = c***) {
+             ~~~~
    + CategoryInfo          : ObjectNotFound: (c***:String) [], CommandNotFoundExceptio
   n
    + FullyQualifiedErrorId : CommandNotFoundException

c*** : Имя "c***" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правиль
ность написания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:2 знак:13
+ if($color = c***) {
+             ~~~~
    + CategoryInfo          : ObjectNotFound: (c***:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
c*** : Имя "c***" не распознано как имя командлета, функции, файла сценария или выполняе
мой программы. Проверьте правильность написания имени, а также наличие и правильность пу
ти, после чего повторите попытку.
строка:2 знак:13
+ if($color = c***) {
+             ~~~~
    + CategoryInfo          : ObjectNotFound: (c***:String) [], CommandNotFoundExceptio
   n
    + FullyQualifiedErrorId : CommandNotFoundException

c*** : Имя "c***" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правиль
ность написания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:2 знак:13
+ if($color = c***) {
+             ~~~~
    + CategoryInfo          : ObjectNotFound: (c***:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
c*** : Имя "c***" не распознано как имя командлета, функции, файла сценария или выполняе
мой программы. Проверьте правильность написания имени, а также наличие и правильность пу
ти, после чего повторите попытку.
строка:2 знак:13
+ if($color = c***) {
+             ~~~~
    + CategoryInfo          : ObjectNotFound: (c***:String) [], CommandNotFoundExceptio
   n
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Student.PTK\Litovchenko> foreach($color in $colors) {
if($color = "c") {
write-host $color}
}
c
c
c
c
PS C:\Users\Student.PTK\Litovchenko> foreach($color in $colors) {
if($color[0] = "c") {
write-host $color}
}
Не удается индексировать в объект типа System.String.
строка:2 знак:4
+ if($color[0] = "c") {
+    ~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : CannotIndex
Не удается индексировать в объект типа System.String.
строка:2 знак:4
+ if($color[0] = "c") {
+    ~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : CannotIndex

Не удается индексировать в объект типа System.String.
строка:2 знак:4
+ if($color[0] = "c") {
+    ~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : CannotIndex
Не удается индексировать в объект типа System.String.
строка:2 знак:4
+ if($color[0] = "c") {
+    ~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : CannotIndex

Не удается индексировать в объект типа System.String.
строка:2 знак:4
+ if($color[0] = "c") {
+    ~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : CannotIndex
Не удается индексировать в объект типа System.String.
строка:2 знак:4
+ if($color[0] = "c") {
+    ~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : CannotIndex

Не удается индексировать в объект типа System.String.
строка:2 знак:4
+ if($color[0] = "c") {
+    ~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : CannotIndex
Не удается индексировать в объект типа System.String.
строка:2 знак:4
+ if($color[0] = "c") {
+    ~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : CannotIndex

PS C:\Users\Student.PTK\Litovchenko> foreach($color in $colors) {
if($color = "cyan") {
write-host $color}
}
cyan
cyan
cyan
cyan
PS C:\Users\Student.PTK\Litovchenko> foreach($color in $colors) {
if($color -eq "c") {
write-host $color}
}
PS C:\Users\Student.PTK\Litovchenko> foreach($color in $colors) {
if($color -eq "cyan") {
write-host $color}
}
cyan
PS C:\Users\Student.PTK\Litovchenko> foreach($color in $colors) {
if($color -eq "c***") {
write-host $color}
}
PS C:\Users\Student.PTK\Litovchenko> foreach($color in $colors) {
if($color -eq c***) {
write-host $color}
}
строка:2 знак:14
+ if($color -eq c***) {
+              ~
Необходимо предоставить выражение для значения справа от оператора "-eq".

строка:2 знак:15
+ if($color -eq c***) {
+               ~~~~
Непредвиденная лексема "c***" в выражении или операторе.

строка:2 знак:15
+ if($color -eq c***) {
+               ~~~~
Отсутствует закрывающий знак ")" после выражения в операторе "if".

строка:1 знак:28
+ foreach($color in $colors) {
+                            ~
Отсутствует закрывающий знак "}" в блоке операторов или определении типа.

строка:2 знак:19
+ if($color -eq c***) {
+                   ~
Непредвиденная лексема ")" в выражении или операторе.

строка:4 знак:1
+ }
+ ~
Непредвиденная лексема "}" в выражении или операторе.
строка:2 знак:14
+ if($color -eq c***) {
+              ~
Необходимо предоставить выражение для значения справа от оператора "-eq".

строка:2 знак:15
+ if($color -eq c***) {
+               ~~~~
Непредвиденная лексема "c***" в выражении или операторе.

строка:2 знак:15
+ if($color -eq c***) {
+               ~~~~
Отсутствует закрывающий знак ")" после выражения в операторе "if".

строка:1 знак:28
+ foreach($color in $colors) {
+                            ~
Отсутствует закрывающий знак "}" в блоке операторов или определении типа.

строка:2 знак:19
+ if($color -eq c***) {
+                   ~
Непредвиденная лексема ")" в выражении или операторе.

строка:4 знак:1
+ }
+ ~
Непредвиденная лексема "}" в выражении или операторе.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : ExpectedValueExpression

PS C:\Users\Student.PTK\Litovchenko> foreach($color in $colors) {
if($color -eq "c") {
write-host $color}
}
PS C:\Users\Student.PTK\Litovchenko> foreach($color in $colors) {
if($color -eq "cyan") {
write-host $color}
}
cyan
PS C:\Users\Student.PTK\Litovchenko> $num = 0
PS C:\Users\Student.PTK\Litovchenko> while($num -ne 5) {
$num += 1
write-host $num}
1
2
3
4
5
PS C:\Users\Student.PTK\Litovchenko> $num = 0
PS C:\Users\Student.PTK\Litovchenko> while($num -gt 10){
write-host "enter a number: "
$num = Read-Host}
PS C:\Users\Student.PTK\Litovchenko> while($num -gt 10){
$num = Read-Host}
PS C:\Users\Student.PTK\Litovchenko> while($num -gt 10){
$num = Read-Host
}
PS C:\Users\Student.PTK\Litovchenko> $num = 0
PS C:\Users\Student.PTK\Litovchenko> while($num -gt 10){
$num = Read-Host
}
PS C:\Users\Student.PTK\Litovchenko> while($num -lt 10){
$num = Read-Host
}
PS C:\Users\Student.PTK\Litovchenko> while($num -gt 10){
$num = Read-Host
}
PS C:\Users\Student.PTK\Litovchenko> 2
2
PS C:\Users\Student.PTK\Litovchenko> while($num -gt 10){
$num = Read-Host
}
PS C:\Users\Student.PTK\Litovchenko> $num = 0
PS C:\Users\Student.PTK\Litovchenko> while($num -gt 10){
$num = Read-Host
}
PS C:\Users\Student.PTK\Litovchenko> $num = 12
PS C:\Users\Student.PTK\Litovchenko> while($num -gt 10){
$num = Read-Host
}
PS C:\Users\Student.PTK\Litovchenko> while($num -lt 10){
$num = Read-Host
}
PS C:\Users\Student.PTK\Litovchenko> while($num -lt 10){
$num = Read-Host
}
PS C:\Users\Student.PTK\Litovchenko> $num = 0
PS C:\Users\Student.PTK\Litovchenko> while($num -lt 10){
$num = Read-Host
}
PS C:\Users\Student.PTK\Litovchenko> $counter = 0
PS C:\Users\Student.PTK\Litovchenko> while ($counter -ne 5) {
$counter += 1
write-host $counter}
1
2
3
4
5
PS C:\Users\Student.PTK\Litovchenko> $number = 0
PS C:\Users\Student.PTK\Litovchenko> while($number -le 20) {
if ($number % 2 -ne 0) {
write-host $number}
$number += 1}
1
3
5
7
9
11
13
15
17
19
PS C:\Users\Student.PTK\Litovchenko> while($number -le 20) {
if ($number % 2 -ne 0) {
write-host "number: $number is odd"}
$number += 1}
PS C:\Users\Student.PTK\Litovchenko> $number = 0
PS C:\Users\Student.PTK\Litovchenko> while($number -le 20) {
if ($number % 2 -ne 0) {
write-host "number: $number is odd"}
$number += 1}
number: 1 is odd
number: 3 is odd
number: 5 is odd
number: 7 is odd
number: 9 is odd
number: 11 is odd
number: 13 is odd
number: 15 is odd
number: 17 is odd
number: 19 is odd
PS C:\Users\Student.PTK\Litovchenko> $password = 1234
PS C:\Users\Student.PTK\Litovchenko> while($password -ne 1234) {
write-host "enter a password: "
$password = read-host}
PS C:\Users\Student.PTK\Litovchenko> $password = 1111
PS C:\Users\Student.PTK\Litovchenko> while($password -ne 1234) {
write-host "enter a password: "
$password = read-host}
enter a password:
enter a password:
PS C:\Users\Student.PTK\Litovchenko> $number = 0
PS C:\Users\Student.PTK\Litovchenko> do {
$input = read-host "enter a number" } while($number -ne $input) write-host "Correct!"
Correct!
PS C:\Users\Student.PTK\Litovchenko> $number = 0
PS C:\Users\Student.PTK\Litovchenko> do {
$input = read-host "enter a number: "} until($input -eq "exit") 

PS C:\Users\Student.PTK\Litovchenko> do {
$input = read-host "enter number"; $sum += $input} while ($input -ne "exit")
PS C:\Users\Student.PTK\Litovchenko> $sum
1234567exit
PS C:\Users\Student.PTK\Litovchenko> $sum = 0
PS C:\Users\Student.PTK\Litovchenko> $num1 = "10"
PS C:\Users\Student.PTK\Litovchenko> $num2 = "20"
PS C:\Users\Student.PTK\Litovchenko> $result = [int]$num1 + [int]$num2
PS C:\Users\Student.PTK\Litovchenko> $result
30
PS C:\Users\Student.PTK\Litovchenko> do {
$input = read-host "enter number"; [int]$sum += [int]$input} while ($input -ne "exit")
Не удается преобразовать значение "exit" в тип "System.Int32". Ошибка: "Входная строка имела неверный формат."
строка:2 знак:36
+ $input = read-host "enter number"; [int]$sum += [int]$input} while ($ ...
+                                    ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvalidCastFromStringToInteger
Не удается преобразовать значение "exit" в тип "System.Int32". Ошибка: "Входная строка им
ела неверный формат."
строка:2 знак:36
+ $input = read-host "enter number"; [int]$sum += [int]$input} while ($ ...
+                                    ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvalidCastFromStringToInteger

PS C:\Users\Student.PTK\Litovchenko> $sum
27
PS C:\Users\Student.PTK\Litovchenko> $nums = 1, 2, 3, 42, 4, 5, 9
PS C:\Users\Student.PTK\Litovchenko> $max = -100000
PS C:\Users\Student.PTK\Litovchenko> foreach($elemnets in $nums) {
if ($max -le $elements) {
$max = $elements} 
}
PS C:\Users\Student.PTK\Litovchenko> $max
PS C:\Users\Student.PTK\Litovchenko> foreach($elements in $nums) {
if ($max -le $elements) {
$max = $elements} 
}
PS C:\Users\Student.PTK\Litovchenko> $max
42
PS C:\Users\Student.PTK\Litovchenko> $n = 5
PS C:\Users\Student.PTK\Litovchenko> for($i = 0; $i -lt $n; $i++) {
$factorial *= $n;
$n -= 1}
PS C:\Users\Student.PTK\Litovchenko> $n
2
PS C:\Users\Student.PTK\Litovchenko> $n = 5
PS C:\Users\Student.PTK\Litovchenko> $n1 = 5
PS C:\Users\Student.PTK\Litovchenko> for($i = 0; $i -lt $n; $i++) {
$factorial *= $n1;
$n1 -= 1}
PS C:\Users\Student.PTK\Litovchenko> $n
5
PS C:\Users\Student.PTK\Litovchenko> $n1
0
PS C:\Users\Student.PTK\Litovchenko> $factorial
PS C:\Users\Student.PTK\Litovchenko> TerminatingError(TabExpansion2): "Не удается привязать аргумент к параметру "inputScript", так как он представляет собой пустую строку."
PS C:\Users\Student.PTK\Litovchenko> TerminatingError(TabExpansion2): "Не удается привязать аргумент к параметру "inputScript", так как он представляет собой пустую строку."
PS C:\Users\Student.PTK\Litovchenko> TerminatingError(TabExpansion2): "Не удается привязать аргумент к параметру "inputScript", так как он представляет собой пустую строку."
PS C:\Users\Student.PTK\Litovchenko> TerminatingError(TabExpansion2): "Не удается привязать аргумент к параметру "inputScript", так как он представляет собой пустую строку."
PS C:\Users\Student.PTK\Litovchenko> TerminatingError(TabExpansion2): "Не удается привязать аргумент к параметру "inputScript", так как он представляет собой пустую строку."
PS C:\Users\Student.PTK\Litovchenko> TerminatingError(TabExpansion2): "Не удается привязать аргумент к параметру "inputScript", так как он представляет собой пустую строку."
PS C:\Users\Student.PTK\Litovchenko> TerminatingError(TabExpansion2): "Не удается привязать аргумент к параметру "inputScript", так как он представляет собой пустую строку."
PS C:\Users\Student.PTK\Litovchenko> TerminatingError(TabExpansion2): "Не удается привязать аргумент к параметру "inputScript", так как он представляет собой пустую строку."
PS C:\Users\Student.PTK\Litovchenko> $factorial
PS C:\Users\Student.PTK\Litovchenko> $factorial = 1
PS C:\Users\Student.PTK\Litovchenko> $n1 = 5
PS C:\Users\Student.PTK\Litovchenko> for($i = 1; $i -lt $n; $i++) {
$factorial *= $n1;
$n1 -= 1}
PS C:\Users\Student.PTK\Litovchenko> $factorial
120
PS C:\Users\Student.PTK\Litovchenko> $strings = "pig", "mini-pig", "big-pig", "mango", "medium-pig", "piggers", "two"
PS C:\Users\Student.PTK\Litovchenko> for($i = 0; $i -lt $strings.Count; $i++) {
if ($strings[$i].Length -gt 3) {
$str1[$i] = $strings[$i]}
}
Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray
Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray
Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray
Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray
Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray
Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

PS C:\Users\Student.PTK\Litovchenko> for($i = 0; $i -lt $strings.Length; $i++) {
if ($strings[$i].Length -gt 3) {
$str1[$i] = $strings[$i]}
}
Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray
Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray
Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray
Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray
Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray
Не удается индексировать в массив NULL.
строка:3 знак:1
+ $str1[$i] = $strings[$i]}
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

PS C:\Users\Student.PTK\Litovchenko> for($i = 0; $i -lt $strings.Length; $i++) {
if ($strings[$i].Length -gt 3) {
$str1 = $strings[$i]}
}
PS C:\Users\Student.PTK\Litovchenko> $str1
piggers
PS C:\Users\Student.PTK\Litovchenko> for($i = 0; $i -lt $strings.Length; $i++) {
if ($strings[$i].Length -gt 3) {
$str1.Add($strings[$i])}
}
Сбой вызова метода из-за отсутствия в [System.String] метода с именем "Add".
строка:3 знак:1
+ $str1.Add($strings[$i])}
+ ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : MethodNotFound
Сбой вызова метода из-за отсутствия в [System.String] метода с именем "Add".
строка:3 знак:1
+ $str1.Add($strings[$i])}
+ ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : MethodNotFound

Сбой вызова метода из-за отсутствия в [System.String] метода с именем "Add".
строка:3 знак:1
+ $str1.Add($strings[$i])}
+ ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : MethodNotFound
Сбой вызова метода из-за отсутствия в [System.String] метода с именем "Add".
строка:3 знак:1
+ $str1.Add($strings[$i])}
+ ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : MethodNotFound

Сбой вызова метода из-за отсутствия в [System.String] метода с именем "Add".
строка:3 знак:1
+ $str1.Add($strings[$i])}
+ ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : MethodNotFound
Сбой вызова метода из-за отсутствия в [System.String] метода с именем "Add".
строка:3 знак:1
+ $str1.Add($strings[$i])}
+ ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : MethodNotFound

Сбой вызова метода из-за отсутствия в [System.String] метода с именем "Add".
строка:3 знак:1
+ $str1.Add($strings[$i])}
+ ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : MethodNotFound
Сбой вызова метода из-за отсутствия в [System.String] метода с именем "Add".
строка:3 знак:1
+ $str1.Add($strings[$i])}
+ ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : MethodNotFound

Сбой вызова метода из-за отсутствия в [System.String] метода с именем "Add".
строка:3 знак:1
+ $str1.Add($strings[$i])}
+ ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : MethodNotFound
Сбой вызова метода из-за отсутствия в [System.String] метода с именем "Add".
строка:3 знак:1
+ $str1.Add($strings[$i])}
+ ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : MethodNotFound

PS C:\Users\Student.PTK\Litovchenko> for($i = 0; $i -lt $strings.Length; $i++) {
if ($strings[$i].Length -gt 3) {
$str1 += $strings[$i]}
}
PS C:\Users\Student.PTK\Litovchenko> $str1
piggersmini-pigbig-pigmangomedium-pigpiggers
PS C:\Users\Student.PTK\Litovchenko> $str1 = "example", "example1"
PS C:\Users\Student.PTK\Litovchenko> for($i = 0; $i -lt $strings.Length; $i++) {
if ($strings[$i].Length -gt 3) {
$str1 += $strings[$i]}
}
PS C:\Users\Student.PTK\Litovchenko> $str1
example
example1
mini-pig
big-pig
mango
medium-pig
piggers
PS C:\Users\Student.PTK\Litovchenko> $j = 0
PS C:\Users\Student.PTK\Litovchenko> while($j -le 50) {
if ($j % 3 -eq 0) {
write-host($j)}
}
PS C:\Users\Student.PTK\Litovchenko> while($j -le 50) {
if ($j % 3 -eq 0) {
write-host($j)}
$j++
}

3
6
9
12
15
18
21
24
27
30
33
36
39
42
45
48
PS C:\Users\Student.PTK\Litovchenko> function Test-Prime {
    param(
        [Parameter(ValueFromPipeline=$true)]
        [int]$number
        )

    Process {
        $prime = $true;

        if ($number -eq 1) {
            $prime = $false;
        }
        if ($number -gt 3) {
            # limit loop to max sqrt($number)
            $sqrt = [math]::Sqrt($number); 
            for($i = 2; $i -le $sqrt; $i++) {
                if ($number % $i -eq 0) {
                    # we found it is not prime
                    $prime = $false;
                    break;
                }
            }
        }

        return $prime;
    }
}
PS C:\Users\Student.PTK\Litovchenko> $input = read-host "enter number"
PS C:\Users\Student.PTK\Litovchenko> Test-Prime($input)
>> TerminatingError(Test-Prime): "Не удается обработать преобразование аргументов для параметра "number". Не удается преобразовать значение "System.Collections.ArrayList+ArrayListEnumeratorSimple" типа "System.Collections.ArrayList+ArrayListEnumeratorSimple" в тип "System.Int32"."
Test-Prime : Не удается обработать преобразование аргументов для параметра "number". Не удается преобразовать значение "
System.Collections.ArrayList+ArrayListEnumeratorSimple" типа "System.Collections.ArrayList+ArrayListEnumeratorSimple" в 
тип "System.Int32".
строка:1 знак:11
+ Test-Prime($input)
+           ~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Test-Prime], ParameterBindingArgumentTransformationException
    + FullyQualifiedErrorId : ParameterArgumentTransformationError,Test-Prime
Test-Prime : Не удается обработать преобразование аргументов для параметра "number". Не у
дается преобразовать значение "System.Collections.ArrayList+ArrayListEnumeratorSimple" ти
па "System.Collections.ArrayList+ArrayListEnumeratorSimple" в тип "System.Int32".
строка:1 знак:11
+ Test-Prime($input)
+           ~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Test-Prime], ParameterBindingArgumentTra
   nsformationException
    + FullyQualifiedErrorId : ParameterArgumentTransformationError,Test-Prime

PS C:\Users\Student.PTK\Litovchenko> Test-Prime(55)
False
PS C:\Users\Student.PTK\Litovchenko> 1..55 | %{ Write-Host " $_ $( Test-Prime $_)" }
 1 False
 2 True
 3 True
 4 False
 5 True
 6 False
 7 True
 8 False
 9 False
 10 False
 11 True
 12 False
 13 True
 14 False
 15 False
 16 False
 17 True
 18 False
 19 True
 20 False
 21 False
 22 False
 23 True
 24 False
 25 False
 26 False
 27 False
 28 False
 29 True
 30 False
 31 True
 32 False
 33 False
 34 False
 35 False
 36 False
 37 True
 38 False
 39 False
 40 False
 41 True
 42 False
 43 True
 44 False
 45 False
 46 False
 47 True
 48 False
 49 False
 50 False
 51 False
 52 False
 53 True
 54 False
 55 False
PS C:\Users\Student.PTK\Litovchenko> $months = "январь", "февраль", "март", "апрель", "май", "июнь", "июль", "август", "сентябрь", "октябрь", "ноябрь", "декабрь" 
PS C:\Users\Student.PTK\Litovchenko> foreach($elements in $months) {
if($elements.Contains("я")) {
write-host($elements)}
}
январь
сентябрь
октябрь
ноябрь
PS C:\Users\Student.PTK\Litovchenko> $n = 1
PS C:\Users\Student.PTK\Litovchenko> $n1 = 1
PS C:\Users\Student.PTK\Litovchenko>  for(;;) {
$n = $n + $n1;
$n1 = $n1 + $n;
if ($n1 -and $n -gt 100) {
break}
}
PS C:\Users\Student.PTK\Litovchenko> $n = 1
PS C:\Users\Student.PTK\Litovchenko> $n1 = 1
PS C:\Users\Student.PTK\Litovchenko>  for(;;) {
$n = $n + $n1;
$n1 = $n1 + $n;
if ($n1 -and $n -gt 100) {
break}
}
PS C:\Users\Student.PTK\Litovchenko> $n1
377
PS C:\Users\Student.PTK\Litovchenko> $n
233
PS C:\Users\Student.PTK\Litovchenko> $nums = 1, 4, 5, 2, 5, 8, 10, 33
PS C:\Users\Student.PTK\Litovchenko> foreach($elements in $nums) {
if ($elements % 2 -eq 0) {
$num1 += $elements}
}
PS C:\Users\Student.PTK\Litovchenko> $nums1

PS C:\Users\Student.PTK\Litovchenko> $nums1 = 0, 0
PS C:\Users\Student.PTK\Litovchenko> foreach($elements in $nums) {
if ($elements % 2 -eq 0) {
$num1 += $elements}
}
PS C:\Users\Student.PTK\Litovchenko> $nums1
0
0
PS C:\Users\Student.PTK\Litovchenko> foreach($elements in $nums) {
if ($elements % 2 -eq 0) {
$nums1 += $elements}
}
PS C:\Users\Student.PTK\Litovchenko> $nums1
0
0
4
2
8
10
PS C:\Users\Student.PTK\Litovchenko> do {
$input = read-host "enter number"; if([int]$input % 2 -eq 0) {
write-host "even number"} else {write-host "odd number"}
} while ([string]$input -ne "exit")
odd number
even number
even number
Не удается преобразовать значение "1789471894791412" в тип "System.Int32". Ошибка: "Значение было недопустимо малым или 
недопустимо большим для Int32."
строка:2 знак:39
+ $input = read-host "enter number"; if([int]$input % 2 -eq 0) {
+                                       ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvalidCastFromStringToInteger
Не удается преобразовать значение "1789471894791412" в тип "System.Int32". Ошибка: "Значе
ние было недопустимо малым или недопустимо большим для Int32."
строка:2 знак:39
+ $input = read-host "enter number"; if([int]$input % 2 -eq 0) {
+                                       ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvalidCastFromStringToInteger

even number
Не удается преобразовать значение "exit" в тип "System.Int32". Ошибка: "Входная строка имела неверный формат."
строка:2 знак:39
+ $input = read-host "enter number"; if([int]$input % 2 -eq 0) {
+                                       ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvalidCastFromStringToInteger
Не удается преобразовать значение "exit" в тип "System.Int32". Ошибка: "Входная строка им
ела неверный формат."
строка:2 знак:39
+ $input = read-host "enter number"; if([int]$input % 2 -eq 0) {
+                                       ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvalidCastFromStringToInteger

PS C:\Users\Student.PTK\Litovchenko> $number = read-host "enter number"
PS C:\Users\Student.PTK\Litovchenko> while ($input -ne 12){
$input = read-host}
PS C:\Users\Student.PTK\Litovchenko> while ($number -ne 12){
$number = read-host}
PS C:\Users\Student.PTK\Litovchenko> while ($number -eq 12){
$number = read-host}
PS C:\Users\Student.PTK\Litovchenko> while ($number -ne 12){
$number = read-host}
PS C:\Users\Student.PTK\Litovchenko> while ($number -ne 12){
$number = read-host "enter number"}
PS C:\Users\Student.PTK\Litovchenko> try {
for($i = 0; $i -le 10; $i++) {
write-host($i)}
}
catch {
write-host "Division by Zero"
}

0
1
2
3
4
5
6
7
8
9
10
PS C:\Users\Student.PTK\Litovchenko> $strings = "pig", "mini-pig", "piggers", "medium-pig"
PS C:\Users\Student.PTK\Litovchenko> try {
foreach($elements in $strings) {
write-host($elemnts)
}
}
catch {
write-host "empty string"}




PS C:\Users\Student.PTK\Litovchenko> try {
foreach($elements in $strings) {
write-host([string]$elemnts)
}
}
catch {
write-host "empty string"}




PS C:\Users\Student.PTK\Litovchenko> try {
while ($number -ne 13){
$number = read-host "enter number"}
}
catch {
throw { write-host "error"}
}
}
строка:8 знак:1
+ }
+ ~
Непредвиденная лексема "}" в выражении или операторе.
строка:8 знак:1
+ }
+ ~
Непредвиденная лексема "}" в выражении или операторе.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : UnexpectedToken

PS C:\Users\Student.PTK\Litovchenko> try {
while ($number -ne 13){
$number = read-host "enter number"}
}
catch {
throw write-host "error"
}
}
строка:8 знак:1
+ }
+ ~
Непредвиденная лексема "}" в выражении или операторе.
строка:8 знак:1
+ }
+ ~
Непредвиденная лексема "}" в выражении или операторе.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : UnexpectedToken

PS C:\Users\Student.PTK\Litovchenko> try {
while ($number -ne 13){
$number = read-host "enter number"}
}
catch {
throw write-host "error"
}
PS C:\Users\Student.PTK\Litovchenko> for($i = 0; $i -le 10; $i++){
$input = read-host "enter number"
if ([int]$input -gt 0) {
[int]$sum += [int]$input}
}
PS C:\Users\Student.PTK\Litovchenko> $sum
94


